概念
  git
     工具，版本控制
     
     
github
      网站，社交平台，开源项目，远程仓储
      
svn和git区别
  --集成式  多人协作  代码在中央服务器
  --分布式 单人  代码在每个人的电脑上
  
---------------------------
建立一个库
   drag
   git clone [url]
   
设置贡献者
  name
  emial
    >>设置用户名和邮箱
  cd Daxiong
  git config --global user.name 'Daxiong'
  git config --global user.email "liujianwei1213@163.com"
  
   >>查看所有配置项
  git config --list
   >>查看所有邮箱
  git config --global user.email 
    >>查看所有用户名
   git config --global user.name
   

--------------------------------
git的三个区
	  工作区
	  
	  暂存区
	     -- 作为过滤层
	     --避免误操作
	     --保护工作区和版本区域
	     --分支处理
	     
	  版本库(库)
	  
	  
Git命令  在.git目录下面
   git  status
   --添加到暂存区
   git  add	  E:\Cupid\GitDemo\DaXiong\工作辅助\玩转Git和GitHub\201706061008.txt
   
  // add 命令
	   
//撤销操作 
git reset HEAD .	   
git reset HEAD  文件名
	   
//提交到版本库	   
git commit	   

   按ESC键 跳到命令模式，然后：

:w   保存文件但不退出vi
:w file 将修改另外保存到file中，不退出vi
:w!   强制保存，不推出vi
:wq  保存文件并退出vi
:wq! 强制保存文件，并退出vi
q:  不保存文件，退出vi
:q! 不保存文件，强制退出vi
:e! 放弃所有修改，从上次保存文件开始再编辑
pwd 查看当前文件夹路径

-------------------------
 git pull  
 git push
 
 git add .  //全部提交 .的方式
 git commit -m '2017年6月6日17:18:08'
 git pull
 git push
--------------------
简写方式
git commit -a -m 'add file'
	   
----------------------------
查看历史
git log	   
	   
	  
------------------------
4--------
对比
 git diff 工作区和暂存区 对比
 git diff --cached/--staged 暂存区和版本库
 git diff master  工作区和版本库 
 
 ------------------------------
 --5
   撤销 
  git checkout --<file.name> 修改---》 工作区- 撤销挂起更改（ 工作区撤销 从暂存区取，没有从版本区取）
  
  git reset HEAD  <file.name> 修改---》  暂存区-撤销挂起更改 （ 从暂存区撤销到工作区）   
  
  git commit  -m 'text' --amend 修改---》  //撤销同一个文件的上一次提交  然后重新提交
  
  -------------------
  6 删除操作
     git rm <file.name> 工作区删除了一个文件  把暂存区对应的文件也删除掉
     //工作区和暂存区都有文件
     git rm -f <file.name>  直接删除暂存区文件  两个区都删掉 
     git rm -cached <file.name> 只删除暂存区文件 工作区保留
     
    
     
-----------------------------
   7-----------     
   git log //查看日志
   找到id
	   恢复
    git checkout <commit_id> <file.name>  删除了---》 工作区 撤销挂起更改  具体到哪条记录
    git reset --hard <commit_id>   删除了---》 整个版本的恢复  工作区 撤销挂起更改  具体到哪条记录
    git reset --hard HEAD^
    git reflog //回到未来
---------------------
8 同步到远程仓库

   git remote 远程的默认名字origin
   git remote add 改名字
   git remote -v 查看地址
   
git push origin[名字] master[分支]
git push  -u origin[名字] master[分支]
---------------------------------------

9  同步到远程仓库   更新本地
git fetch  拉取过来不合并 需要手动合并
     git diff master origin/master  //查看冲突
     git merge origin/master  //合并
git pull  拉取过来合并



-----------------------------------
10  开源项目写作
 通过网站合并分支
fork
pull request


dos方式的分支处理

-------------------------------------------
11  创建一个分支
查看分支
git branch
创建一个分支
git branch <branchname>

切换分支
git checkout <branchname>

创建并切换分支
git  checkout -b <branchname> 
合并分支
切换到主分支下
 git  merged <branchname> 
------------------------------------
12 分支 在暂存区
git branch --merged;//查看同master合并过的分支
git branch --no-merged;//查看同master未合并过的分支

git branch -d <branchname> //删除已经合并后的分支
git branch -D <branchname> //强制删除未合并的分支

查看冲突
git status 
手动修改冲突
然后合并分支


------------------
13
github上的分支
  github push 
  
  git push origin <branchname>
  
  git tag v1.0
  gti push origin v1.0
  
  --------------------------------
  github上创建阻止
  github创建博客
  https://pages.github.com
  

cd.. 
lc


http://git.oschina.net/progit/


================================================================================================
工作区和暂存区概念：

     工作区（Working Directory）就是你在电脑里能看到的目录。

      版本库（Repository）

        工作区有一个隐藏目录.git，这个不算工作区，而是Git的版本库。

        Git的版本库里存了很多东西，其中最重要的就是称为stage（或者叫index）的暂存区，还有Git为我们自动创建的第一个分支master，以及指向master的一个指针叫HEAD。



前面讲了我们把文件往Git版本库里添加的时候，是分两步执行的：

第一步是用git add把文件添加进去，实际上就是把文件修改添加到暂存区；

第二步是用git commit提交更改，实际上就是把暂存区的所有内容提交到当前分支。

Git是如何跟踪修改的：每次修改，如果不add到暂存区，那就不会加入到commit中。

 

撤销修改

  

场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令git checkout -- file。

场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令git reset HEAD file，就回到了场景1，第二步按场景1操作。

场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，git reset HEAD^

 

删除文件

在工作空间中删除了一个文件，Git知道你删除了文件，因此，工作区和版本库就不一致了，git status命令会立刻告诉你哪些文件被删除了：

zhangqulideMacBook-Air:git_test zhangquli$ rm b.txt
zhangqulideMacBook-Air:git_test zhangquli$ git status
# On branch master
# Changes not staged for commit:
#   (use "git add/rm <file>..." to update what will be committed)
#   (use "git checkout -- <file>..." to discard changes in working directory)
#
#   modified:   a.txt
#   deleted:    b.txt
#
no changes added to commit (use "git add" and/or "git commit -a")
　　现在你有两个选择，一是确实要从版本库中删除该文件，那就用命令git rm删掉，并且git commit：

                               另一种情况是删错了，因为版本库里还有呢，所以可以很轻松地把误删的文件恢复到最新版本：  git checkout -- test.txt

    其实是用版本库里的版本替换工作区的版本，无论工作区是修改还是删除，都可以“一键还原”。